// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0

package sqlc

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

type Querier interface {
	BlockAllUserSession(ctx context.Context, userID uuid.UUID) error
	BlockUser(ctx context.Context, id uuid.UUID) error
	CheckUsername(ctx context.Context, lower string) (int64, error)
	CleanupVerifiedAndExpiredRequests(ctx context.Context) error
	CreateEmailVerificationRequest(ctx context.Context, arg CreateEmailVerificationRequestParams) error
	CreatePasswordResetRequest(ctx context.Context, arg CreatePasswordResetRequestParams) error
	// Create a new session
	CreateSession(ctx context.Context, arg CreateSessionParams) (Session, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (Authentication, error)
	CreateUserDeleteRequest(ctx context.Context, arg CreateUserDeleteRequestParams) error
	// Create a new user login
	CreateUserLogin(ctx context.Context, arg CreateUserLoginParams) (UserLogin, error)
	CreateUserProfile(ctx context.Context, arg CreateUserProfileParams) error
	CreateUserRole(ctx context.Context, arg CreateUserRoleParams) (UserRole, error)
	DeletePasswordResetRequestByID(ctx context.Context, id int32) error
	DeletePasswordResetRequestsByEmail(ctx context.Context, email string) error
	DeleteSession(ctx context.Context, id uuid.UUID) error
	DeleteUserByID(ctx context.Context, id uuid.UUID) error
	// Delete a user login
	DeleteUserLogin(ctx context.Context, id int32) error
	DeleteUserProfileByID(ctx context.Context, userID uuid.UUID) error
	GetEmailVerificationRequestByToken(ctx context.Context, token string) (EmailVerificationRequest, error)
	GetPasswordResetRequestByID(ctx context.Context, id int32) (PasswordResetRequest, error)
	GetPasswordResetRequestByToken(ctx context.Context, token string) (PasswordResetRequest, error)
	GetSessionAndUserByRefreshToken(ctx context.Context, refreshToken string) (GetSessionAndUserByRefreshTokenRow, error)
	GetSessionsByID(ctx context.Context, id uuid.UUID) (Session, error)
	GetSessionsByRefreshToken(ctx context.Context, refreshToken string) (Session, error)
	GetSessionsByUserID(ctx context.Context, userID uuid.UUID) ([]Session, error)
	GetUidsFromUsername(ctx context.Context, dollar_1 []string) ([]uuid.UUID, error)
	GetUserAndRoleByIdentifier(ctx context.Context, username sql.NullString) (GetUserAndRoleByIdentifierRow, error)
	GetUserByID(ctx context.Context, id uuid.UUID) (Authentication, error)
	GetUserByIdentifier(ctx context.Context, email string) (Authentication, error)
	GetUserByUsername(ctx context.Context, username sql.NullString) (uuid.UUID, error)
	GetUserFromDeleteReqByToken(ctx context.Context, recoveryToken string) (AccountRecoveryRequest, error)
	GetUserIDsFromUsernames(ctx context.Context, username sql.NullString) ([]uuid.UUID, error)
	// Get user logins by user ID
	GetUserLoginsByUserID(ctx context.Context, userID uuid.UUID) ([]UserLogin, error)
	GetUserProfile(ctx context.Context, username sql.NullString) (GetUserProfileRow, error)
	GetUserProfileByUID(ctx context.Context, userID uuid.UUID) (User, error)
	MarkDeleteAsUsedByToken(ctx context.Context, recoveryToken string) error
	RevokeSessionById(ctx context.Context, id uuid.UUID) error
	RotateSessionTokens(ctx context.Context, arg RotateSessionTokensParams) error
	UpdateEmailVerificationRequest(ctx context.Context, arg UpdateEmailVerificationRequestParams) (EmailVerificationRequest, error)
	UpdateImgUserProfile(ctx context.Context, arg UpdateImgUserProfileParams) error
	UpdatePasswordResetRequest(ctx context.Context, arg UpdatePasswordResetRequestParams) error
	UpdatePasswordResetRequestByToken(ctx context.Context, arg UpdatePasswordResetRequestByTokenParams) error
	UpdateUser(ctx context.Context, arg UpdateUserParams) (Authentication, error)
	// Update a user login
	UpdateUserLogin(ctx context.Context, arg UpdateUserLoginParams) (UserLogin, error)
	UpdateUserPassword(ctx context.Context, arg UpdateUserPasswordParams) error
	UpdateUserPasswordByEmail(ctx context.Context, arg UpdateUserPasswordByEmailParams) error
}

var _ Querier = (*Queries)(nil)
